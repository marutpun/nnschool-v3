---
import type { NavLink } from '@/types/ui';

interface Props {
  brand: string;
  links: NavLink[];
}

const { brand, links } = Astro.props;

const currentPathname = Astro.url.pathname;
---

<nav class="navbar" aria-label="Main">
  <div class="navbar-start w-full lg:w-1/2">
    {
      brand && (
        <div class="Navbar_brand">
          <a href="/" class="Navbar_title">
            {brand}
          </a>
        </div>
      )
    }
  </div>
  <div class="navbar-end lg:hidden">
    {
      links && (
        <div class="dropdown dropdown-end">
          <div tabindex="0" role="button" class="btn btn-ghost">
            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" class="inline-block h-5 w-5 stroke-current">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
            </svg>
          </div>
          <ul tabindex="0" class="menu dropdown-content bg-base-100 rounded z-100 mt-4 w-[calc(100vw/3)] p-2 shadow">
            {links.map((link) => (
              <li>
                <a href={link.to} class="Navbar_link" aria-current={currentPathname === link.to ? 'page' : undefined}>
                  {link.title}
                </a>
              </li>
            ))}
          </ul>
        </div>
      )
    }
  </div>
  <div class="navbar-end hidden lg:inline-flex">
    {
      links && (
        <ul class="menu menu-horizontal">
          {links.map((link) => (
            <li>
              <a href={link.to} class="Navbar_link" aria-current={currentPathname === link.to ? 'page' : undefined}>
                {link.title}
              </a>
            </li>
          ))}
        </ul>
      )
    }
  </div>
</nav>
